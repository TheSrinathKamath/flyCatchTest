var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiErrorComponent.html",[0,0.576,1,1.038]],["body/components/ApiErrorComponent.html",[0,0.84,1,1.646,2,1.734,3,0.271,4,0.23,5,1.353,6,1.353,7,1.353,8,1.353,9,0.23,10,3.971,11,3.426,12,2.217,13,1.734,14,2.476,15,1.353,16,2.791,17,2.29,18,2.524,19,3.142,20,1.917,21,4.411,22,1.917,23,3.797,24,0.567,25,1.302,26,2.423,27,3.142,28,3.149,29,1.662,30,1.513,31,3.797,32,0.627,33,0.036,34,2.389,35,1.504,36,1.504,37,2.131,38,2.679,39,0.919,40,1.917,41,0.407,42,3.142,43,0.359,44,0.271,45,0.407,46,1.913,47,1.685,48,2.217,49,2.217,50,2.711,51,1.913,52,2.679,53,2.679,54,1.913,55,0.837,56,1.917,57,1.917,58,1.353,59,2.423,60,1.353,61,1.079,62,1.353,63,0.919,64,1.353,65,0.837,66,1.353,67,0.919,68,1.353,69,0.837,70,1.353,71,0.919,72,1.353,73,1.353,74,1.353,75,0.016,76,0.022,77,0.016]],["title/components/AppComponent.html",[0,0.576,63,1.038]],["body/components/AppComponent.html",[0,0.77,1,0.789,2,1.552,3,0.232,4,0.197,5,1.161,6,1.161,7,1.161,8,1.161,9,0.197,15,1.161,16,2.676,17,2.196,18,1.05,20,1.716,22,1.716,24,0.486,25,1.166,26,2.256,29,0.866,30,1.532,32,0.946,33,0.037,39,1.387,40,1.716,41,0.614,43,0.308,44,0.232,45,0.349,55,0.718,56,1.716,57,1.716,58,1.161,59,2.256,60,1.161,61,1.354,62,1.161,63,1.532,64,1.161,65,0.718,66,1.161,67,0.789,68,1.161,69,0.718,70,1.161,71,0.789,72,1.161,73,1.161,74,1.161,75,0.013,76,0.02,77,0.013,78,1.902,79,2.138,80,4.043,81,3.399,82,3.686,83,3.399,84,3.399,85,2.299,86,4.99,87,4.043,88,3.248,89,2.299,90,1.846,91,1.846,92,3.399,93,3.697,94,2.299,95,2.299,96,1.446,97,2.299,98,3.399,99,2.299,100,3.399,101,1.641,102,1.446,103,1.446,104,1.641,105,1.29,106,2.299,107,2.299,108,2.042,109,2.299,110,2.299,111,2.299,112,2.299,113,2.256,114,3.399,115,2.299,116,2.299,117,2.299,118,2.299,119,2.299]],["title/modules/AppModule.html",[120,0.781,121,1.903]],["body/modules/AppModule.html",[3,0.275,4,0.233,9,0.233,17,1.129,33,0.037,41,0.868,43,0.365,44,0.275,45,0.414,55,0.851,63,2.003,75,0.016,76,0.023,77,0.016,101,2.744,102,1.714,103,1.714,104,1.945,120,0.703,121,3.703,122,0.851,123,1.244,124,2.248,125,2.499,126,2.499,127,1.027,128,2.255,129,2.255,130,2.255,131,2.255,132,2.255,133,2.969,134,2.415,135,2.969,136,2.157,137,1.53,138,1.376,139,2.725,140,1.592,141,1.592,142,3.843,143,3.843,144,3.843,145,1.945,146,1.945,147,3.843,148,3.843,149,1.53,150,1.945,151,2.725,152,1.945,153,2.725,154,2.725,155,3.843,156,2.725,157,2.725,158,2.725,159,2.725,160,1.714]],["title/modules/AppRoutingModule.html",[120,0.781,133,1.698]],["body/modules/AppRoutingModule.html",[3,0.34,4,0.289,9,0.289,33,0.037,41,0.754,43,0.451,44,0.34,45,0.511,75,0.02,76,0.026,77,0.02,93,3.675,108,1.701,122,1.052,127,1.269,133,2.493,140,1.396,141,1.84,145,2.405,146,2.405,161,3.369,162,2.405,163,2.794,164,2.509,165,1.538,166,4.441,167,3.547,168,4.441,169,3.369,170,3.369,171,4.441,172,2.788,173,3.369,174,3.369,175,3.369,176,1.538,177,3.369,178,3.369,179,3.369,180,3.369,181,3.369,182,3.369,183,4.441,184,3.369]],["title/interfaces/Comments.html",[185,1.381,186,1.698]],["body/interfaces/Comments.html",[3,0.378,4,0.32,9,0.32,24,0.791,32,1.328,33,0.035,44,0.378,61,1.561,75,0.022,76,0.028,77,0.022,96,3.786,185,1.707,186,2.667,187,2.351,188,3.093,189,2.667,190,3.457,191,5.495,192,3.084,193,3.923,194,2.647]],["title/injectables/CommentsService.html",[195,1.253,196,1.903]],["body/injectables/CommentsService.html",[3,0.354,4,0.3,9,0.3,24,0.741,25,1.563,29,1.321,30,1.563,32,1.067,33,0.037,39,1.202,41,0.814,43,0.47,44,0.354,45,0.532,61,1.295,75,0.021,76,0.027,77,0.021,79,2.205,90,2.081,91,2.081,105,1.967,113,1.77,149,1.967,186,1.967,193,2.502,194,2.313,195,1.889,196,2.867,197,2.205,198,2.9,199,3.772,200,2.502,201,3.829,202,3.505,203,3.254,204,4.558,205,3.505,206,1.967,207,2.502,208,2.9,209,2.502,210,3.505]],["title/interfaces/Feed.html",[185,1.381,211,1.381]],["body/interfaces/Feed.html",[3,0.406,4,0.345,9,0.345,24,0.85,32,1.264,33,0.035,44,0.406,75,0.024,76,0.029,77,0.024,88,3.549,96,3.397,185,1.836,187,2.529,189,2.791,192,3.166,194,2.696,211,2.271,212,3.327,213,4.668]],["title/components/FeedComponent.html",[0,0.576,65,0.945]],["body/components/FeedComponent.html",[0,0.611,1,0.546,2,1.168,3,0.161,4,0.136,5,0.803,6,0.803,7,0.803,8,0.803,9,0.136,13,1.168,14,1.8,15,0.803,16,2.372,17,1.947,18,0.726,20,1.291,22,1.291,24,0.336,25,0.877,26,1.855,28,2.289,29,0.599,30,1.707,32,1.006,33,0.037,34,2.311,35,2.062,36,2.062,37,2.062,39,1.26,40,2.032,41,0.686,43,0.213,44,0.161,45,0.241,47,1.609,49,2.116,50,1.826,51,2.289,55,0.497,56,1.291,57,1.291,58,0.803,59,1.855,60,0.803,61,1.044,62,0.803,63,0.546,64,0.803,65,1.147,66,0.803,67,0.546,68,0.803,69,0.497,70,0.803,71,0.546,72,0.803,73,0.803,74,0.803,75,0.009,76,0.015,77,0.009,82,1.826,88,1.001,90,1.168,91,1.168,105,0.893,160,2.017,165,0.726,189,1.435,190,1.001,192,1.435,194,1.464,211,2.145,214,1.316,215,3.207,216,2.557,217,3.039,218,2.289,219,2.654,220,3.557,221,3.673,222,2.557,223,3.039,224,1.316,225,3.557,226,3.207,227,2.311,228,2.654,229,3.039,230,2.557,231,1.591,232,2.557,233,1.591,234,1.591,235,1.591,236,1.591,237,1.591,238,1.591,239,1.609,240,1.591,241,1.136,242,1.136,243,1.001,244,1.591,245,1.316,246,1.591,247,1.316,248,1.316,249,1.591,250,1.591,251,1.316,252,2.116,253,1.316,254,1.591,255,1.316,256,1.591,257,2.116,258,2.116,259,2.557,260,2.116,261,2.557,262,2.557,263,1.316,264,1.591,265,1.591,266,1.591,267,3.673,268,3.207,269,2.116,270,2.116,271,1.591,272,1.136,273,1.316,274,2.557,275,1.591,276,1.591,277,1.591,278,3.207,279,2.557,280,2.116,281,1.591,282,1.136,283,1.316,284,2.116,285,1.316,286,1.136,287,3.207,288,2.557,289,1.591,290,1.591,291,1.316,292,1.591,293,1.591,294,1.591,295,1.591,296,1.591,297,1.316,298,1.591,299,1.316,300,1.316,301,1.316,302,1.316,303,2.116,304,1.591]],["title/modules/FeedModule.html",[120,0.781,305,1.903]],["body/modules/FeedModule.html",[3,0.324,4,0.275,9,0.275,33,0.037,41,0.844,43,0.43,44,0.324,45,0.487,55,1.003,65,1.737,75,0.019,76,0.025,77,0.019,120,0.829,122,1.003,123,1.466,124,2.449,125,1.802,126,1.802,127,1.21,134,2.539,136,2.414,137,1.802,138,1.621,140,1.782,141,1.782,150,2.292,152,2.292,211,1.466,305,3.775,306,2.657,307,2.657,308,2.657,309,3.122,310,2.808,311,3.21,312,2.706,313,1.802,314,2.657,315,2.657]],["title/modules/FeedRoutingModule.html",[120,0.781,309,1.698]],["body/modules/FeedRoutingModule.html",[0,0.75,3,0.398,4,0.337,9,0.337,33,0.037,41,0.812,43,0.528,44,0.398,45,0.598,65,1.533,75,0.023,76,0.029,77,0.023,108,1.988,122,1.23,127,1.484,140,1.632,141,2.034,162,2.811,163,3.088,164,2.701,165,1.798,167,2.811,309,2.756,314,3.259,316,3.938,317,3.259]],["title/injectables/FeedService.html",[195,1.253,227,1.903]],["body/injectables/FeedService.html",[3,0.366,4,0.311,9,0.311,24,0.767,25,1.598,29,1.366,30,1.598,32,0.848,33,0.037,39,1.243,41,0.824,43,0.486,44,0.366,45,0.55,61,1.03,75,0.021,76,0.027,77,0.021,79,2.28,90,1.655,91,1.655,105,2.034,113,1.83,149,2.034,195,1.93,197,2.28,200,2.588,201,3.878,203,3.325,206,2.034,207,2.588,209,2.588,211,1.655,227,2.93,245,2.999,318,2.999,319,5.432,320,3.624,321,3.624,322,3.624]],["title/components/HeaderComponent.html",[0,0.576,67,1.038]],["body/components/HeaderComponent.html",[0,0.885,1,1.013,2,1.855,3,0.298,4,0.253,5,1.491,6,1.491,7,1.491,8,1.491,9,0.253,13,1.855,14,2.608,15,1.491,16,2.859,17,2.346,18,1.348,20,2.052,22,2.052,24,0.624,25,1.394,26,2.527,29,1.751,30,1.394,33,0.036,39,1.013,40,2.052,41,0.448,43,0.396,44,0.298,45,0.448,55,0.922,56,2.052,57,2.052,58,1.491,59,2.527,60,1.491,61,1.155,62,1.491,63,1.013,64,1.491,65,0.922,66,1.491,67,1.717,68,1.491,69,0.922,70,1.491,71,1.013,72,1.491,73,1.491,74,1.491,75,0.017,76,0.024,77,0.017,211,1.855,297,3.363,323,2.443,324,4.646,325,4.064,326,2.952,327,2.952,328,4.064,329,4.064,330,2.952,331,2.952,332,2.443,333,2.443]],["title/interceptors/HttpErrorInterceptor.html",[135,1.698,334,2.503]],["body/interceptors/HttpErrorInterceptor.html",[3,0.303,4,0.257,9,0.257,13,1.369,19,4.17,24,0.634,25,1.409,30,1.029,32,0.702,33,0.037,39,1.029,41,0.765,43,0.402,44,0.303,45,0.455,61,0.852,75,0.018,76,0.024,77,0.018,90,1.369,91,1.369,113,2.074,135,2.305,149,1.683,195,1.702,243,1.886,335,2.999,336,3.399,337,2.482,338,4.107,339,4.107,340,5.039,341,4.684,342,5.039,343,2.999,344,2.999,345,4.684,346,2.999,347,4.107,348,4.107,349,2.999,350,2.999,351,2.999,352,2.999,353,2.999,354,2.999,355,4.684,356,2.999,357,2.999,358,2.999,359,2.999,360,4.107,361,4.107,362,4.107,363,4.107,364,4.107,365,4.107,366,4.107,367,4.107,368,2.999,369,2.999]],["title/modules/MaterialModule.html",[120,0.781,310,1.527]],["body/modules/MaterialModule.html",[3,0.365,4,0.309,9,0.309,33,0.037,41,0.887,43,0.484,44,0.365,45,0.548,75,0.021,76,0.027,77,0.021,108,1.823,122,1.128,124,1.823,127,1.36,140,1.496,141,1.925,241,2.578,242,2.578,310,2.346,312,2.923,313,2.027,370,2.578,371,3.845,372,3.611,373,3.845,374,3.845,375,3.611,376,3.845,377,3.611,378,3.845,379,3.611,380,3.668]],["title/interfaces/Posts.html",[176,1.381,185,1.381]],["body/interfaces/Posts.html",[3,0.391,4,0.332,9,0.332,24,0.819,32,1.303,33,0.035,44,0.391,75,0.023,76,0.029,77,0.023,88,3.502,96,3.681,176,2.219,185,1.769,187,2.437,189,2.728,190,3.502,192,3.125,194,2.672,213,4.607,381,3.206]],["title/components/PostsComponent.html",[0,0.576,69,0.945]],["body/components/PostsComponent.html",[0,0.441,1,0.347,2,0.8,3,0.102,4,0.087,5,1.575,6,0.511,7,0.511,8,0.511,9,0.087,13,0.8,14,1.3,15,0.511,16,1.958,17,1.607,18,0.462,20,0.884,22,0.884,24,0.214,25,0.601,26,1.394,28,1.653,29,0.66,30,1.609,32,0.95,33,0.037,34,1.736,35,1.751,36,1.751,37,1.751,39,1.257,40,1.725,41,0.64,43,0.136,44,0.102,45,0.154,46,0.722,47,2.149,50,2.227,51,2.227,54,0.722,55,0.316,56,0.884,57,0.884,58,0.511,59,1.394,60,0.511,61,1.154,62,0.511,63,0.347,64,0.511,65,0.316,66,0.511,67,0.347,68,0.511,69,0.862,70,0.511,71,0.347,72,0.511,73,0.511,74,0.511,75,0.006,76,0.01,77,0.006,82,2.227,90,1.26,91,1.26,108,0.511,113,0.884,160,1.457,165,0.462,176,1.425,186,2.447,189,0.983,190,0.636,192,1.3,194,1.99,196,1.736,199,1.449,208,0.837,217,1.449,218,1.653,219,1.916,220,2.828,223,2.284,224,0.837,225,2.828,228,1.916,229,2.284,239,1.102,241,0.722,242,0.722,243,0.636,247,0.837,248,1.449,251,1.449,252,1.916,253,0.837,255,2.582,257,1.449,258,3.034,260,1.449,263,0.837,269,0.837,270,1.449,272,3.112,273,0.837,280,1.916,282,0.722,283,0.837,284,1.916,285,2.284,286,1.971,299,1.449,300,0.837,301,0.837,302,0.837,303,2.828,332,0.837,333,0.837,382,0.837,383,2.315,384,1.751,385,3.666,386,3.878,387,3.417,388,1.449,389,2.315,390,2.76,391,2.315,392,1.736,393,2.315,394,1.751,395,1.011,396,1.751,397,1.011,398,1.751,399,1.011,400,1.751,401,1.011,402,1.011,403,1.011,404,1.011,405,1.011,406,3.034,407,1.011,408,1.011,409,1.011,410,1.011,411,1.011,412,1.011,413,0.837,414,1.011,415,1.011,416,1.011,417,1.751,418,1.011,419,1.011,420,1.011,421,1.011,422,1.011,423,1.751,424,3.12,425,3.12,426,1.011,427,1.011,428,1.011,429,1.011,430,2.315,431,1.011,432,1.449,433,1.751,434,1.751,435,1.751,436,1.011,437,1.011,438,2.315,439,1.011,440,1.011,441,1.011,442,1.011,443,3.417,444,1.011,445,3.36,446,3.666,447,1.011,448,1.751,449,1.751,450,3.209,451,2.76,452,2.76,453,2.76,454,2.582,455,2.315,456,1.751,457,1.751,458,2.76,459,2.315,460,1.751,461,1.751,462,1.751,463,2.315,464,2.76,465,1.751,466,1.751,467,1.751,468,1.751,469,1.011,470,1.011,471,1.011,472,1.011,473,1.011,474,1.751,475,1.011,476,1.751,477,1.011,478,1.011,479,1.011,480,1.011,481,1.011,482,1.011,483,1.011,484,1.011,485,2.315,486,1.011,487,1.011,488,1.011,489,1.011,490,1.011]],["title/modules/PostsModule.html",[120,0.781,491,1.903]],["body/modules/PostsModule.html",[3,0.324,4,0.275,9,0.275,33,0.037,41,0.844,43,0.43,44,0.324,45,0.487,55,1.003,69,1.737,75,0.019,76,0.025,77,0.019,120,0.829,122,1.003,123,1.466,124,2.449,125,1.802,126,1.802,127,1.21,134,2.539,136,2.414,137,1.802,138,1.621,140,1.782,141,1.782,150,2.292,152,2.292,176,1.466,310,2.808,312,2.706,313,1.802,315,2.657,491,3.775,492,2.657,493,2.657,494,2.657,495,3.122,496,3.21,497,2.657]],["title/modules/PostsRoutingModule.html",[120,0.781,495,1.698]],["body/modules/PostsRoutingModule.html",[0,0.75,3,0.398,4,0.337,9,0.337,33,0.037,41,0.812,43,0.528,44,0.398,45,0.598,69,1.533,75,0.023,76,0.029,77,0.023,108,1.988,122,1.23,127,1.484,140,1.632,141,2.034,162,2.811,163,3.088,164,2.701,165,1.798,167,2.811,317,3.259,495,2.756,497,3.259,498,3.938]],["title/injectables/PostsService.html",[195,1.253,392,1.903]],["body/injectables/PostsService.html",[3,0.354,4,0.3,9,0.3,24,0.741,25,1.563,29,1.321,30,1.563,32,1.067,33,0.037,39,1.202,41,0.814,43,0.47,44,0.354,45,0.532,61,1.295,75,0.021,76,0.027,77,0.021,79,2.205,90,2.081,91,2.081,105,1.967,113,1.77,149,1.967,176,1.6,193,2.502,194,2.313,195,1.889,197,2.205,200,2.502,201,3.829,203,3.254,206,1.967,207,2.502,209,2.502,388,3.772,392,2.867,413,2.9,499,2.9,500,3.505,501,4.558,502,3.505,503,3.505]],["title/modules/SharedModule.html",[120,0.781,134,1.381]],["body/modules/SharedModule.html",[1,2.036,3,0.303,4,0.257,9,0.257,11,2.141,18,1.369,33,0.037,41,0.827,43,0.402,44,0.303,45,0.455,55,0.936,67,2.036,71,2.036,75,0.018,76,0.024,77,0.018,120,0.774,122,0.936,123,1.369,124,2.365,125,1.683,126,1.683,127,1.765,134,2.729,136,2.305,137,1.683,138,1.514,140,1.242,141,1.702,163,2.584,165,1.369,312,2.584,313,1.683,504,2.482,505,2.482,506,2.482,507,2.999,508,2.999,509,2.999,510,2.999]],["title/components/SpinnerComponent.html",[0,0.576,71,1.038]],["body/components/SpinnerComponent.html",[0,0.85,1,0.94,2,1.762,3,0.277,4,0.235,5,1.384,6,1.384,7,1.384,8,1.384,9,0.235,13,1.762,14,2.507,15,1.384,16,2.807,17,2.303,18,1.251,20,1.948,22,1.948,24,0.58,25,1.323,26,2.447,27,3.193,29,1.683,30,1.532,32,0.641,33,0.036,34,2.427,35,1.538,36,1.538,37,2.166,39,0.94,40,1.948,41,0.416,42,3.193,43,0.367,44,0.277,45,0.416,46,1.957,47,1.724,48,2.268,54,1.957,55,0.856,56,1.948,57,1.948,58,1.384,59,2.447,60,1.384,61,1.096,62,1.384,63,0.94,64,1.384,65,0.856,66,1.384,67,0.94,68,1.384,69,0.856,70,1.384,71,1.662,72,2.447,73,1.384,74,1.384,75,0.016,76,0.023,77,0.016,218,3.188,272,1.957,286,1.957,432,3.193,445,2.268,450,2.268,454,2.268,511,2.268,512,4.466,513,3.858,514,3.858,515,2.741,516,2.741,517,2.741]],["title/coverage.html",[518,3.419]],["body/coverage.html",[0,1.052,1,1.076,9,0.269,10,2.596,11,2.239,12,2.596,32,0.734,33,0.036,63,1.076,65,0.979,67,1.076,69,0.979,71,1.076,75,0.018,76,0.025,77,0.018,78,2.596,135,1.761,176,1.432,185,2.189,186,1.761,188,2.596,195,1.986,196,1.973,198,2.596,206,2.377,211,1.432,212,2.596,214,2.596,227,1.973,239,1.973,318,2.596,323,2.596,334,2.596,336,2.596,337,2.596,370,2.239,380,2.239,381,2.596,382,2.596,392,1.973,406,5.052,499,2.596,511,2.596,518,2.596,519,3.137,520,3.137,521,3.137,522,5.133,523,3.137,524,4.235,525,3.137,526,4.794,527,4.794,528,3.137,529,4.794,530,3.137,531,2.596,532,2.596,533,3.137,534,3.137]],["title/dependencies.html",[123,1.662,535,2.089]],["body/dependencies.html",[33,0.037,43,0.517,75,0.023,76,0.028,77,0.023,101,3.46,102,3.049,103,2.427,104,2.755,123,1.762,145,2.755,146,2.755,165,1.762,243,2.427,313,2.166,536,3.859,537,5.045,538,3.859,539,3.859,540,3.859,541,3.859,542,3.859,543,3.859,544,3.859,545,3.859,546,3.859,547,3.859,548,3.859,549,3.859]],["title/index.html",[24,0.534,550,2.524,551,2.524]],["body/index.html",[0,0.922,4,0.274,13,1.461,17,1.326,33,0.025,61,0.909,75,0.019,76,0.025,77,0.019,103,3.046,138,1.616,239,2.013,535,2.648,537,2.648,552,3.2,553,4.292,554,3.2,555,4.843,556,3.2,557,3.2,558,4.292,559,5.397,560,5.676,561,3.2,562,3.2,563,3.2,564,3.2,565,3.2,566,3.2,567,3.2,568,3.2,569,3.2,570,3.2,571,4.843,572,4.843,573,3.2,574,5.175,575,3.2,576,3.2,577,3.2,578,3.2,579,4.292,580,4.292,581,5.175,582,3.2,583,4.292,584,4.292,585,3.2,586,5.556,587,3.2,588,3.2,589,3.2,590,4.292,591,3.2,592,3.2,593,3.2,594,3.2,595,3.2,596,3.2,597,4.843,598,3.2,599,3.2,600,3.2,601,2.284,602,3.2,603,3.2]],["title/modules.html",[122,1.29]],["body/modules.html",[33,0.03,75,0.024,76,0.03,77,0.024,102,3.57,121,2.573,122,1.277,133,2.296,134,1.867,305,2.573,309,2.296,310,2.065,491,2.573,495,2.296,604,5.674,605,5.674,606,6.066,607,5.674,608,5.674]],["title/overview.html",[601,2.95]],["body/overview.html",[1,1.871,2,1.259,33,0.036,55,0.861,63,1.871,65,1.399,67,1.871,69,1.399,71,1.871,75,0.016,76,0.023,77,0.016,120,0.712,121,3.647,122,0.861,123,1.259,124,1.392,125,1.547,126,1.547,127,1.039,128,2.281,129,2.281,130,2.281,131,2.281,132,2.281,133,2.514,134,2.711,135,2.514,136,2.175,137,1.547,138,1.392,164,1.392,187,1.734,197,1.734,291,3.206,305,3.607,306,2.281,307,2.281,308,2.281,309,2.514,310,2.453,491,3.607,492,2.281,493,2.281,494,2.281,495,2.514,504,2.281,505,2.281,506,2.281,601,1.968,609,2.756,610,2.756,611,2.756]],["title/routes.html",[164,2.086]],["body/routes.html",[33,0.033,75,0.028,76,0.033,77,0.028,164,2.441]],["title/miscellaneous/variables.html",[612,2.089,613,3.011]],["body/miscellaneous/variables.html",[24,0.813,32,1.238,33,0.037,35,2.969,36,2.969,37,2.157,75,0.023,76,0.028,77,0.023,160,2.418,172,4.001,206,3.116,282,3.452,370,2.744,371,3.18,373,3.18,374,3.18,376,3.18,378,3.18,380,3.452,531,3.18,532,3.18,612,3.18,613,3.18,614,3.843,615,3.843,616,3.843,617,4.835,618,4.835]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":406,"title":{},"body":{"components/PostsComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0.2.7",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["0.9px",{"_index":296,"title":{},"body":{"components/FeedComponent.html":{}}}],["0/1",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["10px",{"_index":462,"title":{},"body":{"components/PostsComponent.html":{}}}],["12.1.0",{"_index":537,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15px",{"_index":464,"title":{},"body":{"components/PostsComponent.html":{}}}],["1px",{"_index":470,"title":{},"body":{"components/PostsComponent.html":{}}}],["2.2.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":291,"title":{},"body":{"components/FeedComponent.html":{},"overview.html":{}}}],["3.0.1",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":425,"title":{},"body":{"components/PostsComponent.html":{}}}],["300px",{"_index":274,"title":{},"body":{"components/FeedComponent.html":{}}}],["30px",{"_index":443,"title":{},"body":{"components/PostsComponent.html":{}}}],["400px",{"_index":271,"title":{},"body":{"components/FeedComponent.html":{}}}],["50",{"_index":461,"title":{},"body":{"components/PostsComponent.html":{}}}],["50px",{"_index":484,"title":{},"body":{"components/PostsComponent.html":{}}}],["550",{"_index":441,"title":{},"body":{"components/PostsComponent.html":{}}}],["550px",{"_index":442,"title":{},"body":{"components/PostsComponent.html":{}}}],["5px",{"_index":273,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["6",{"_index":610,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":467,"title":{},"body":{"components/PostsComponent.html":{}}}],["640px",{"_index":473,"title":{},"body":{"components/PostsComponent.html":{}}}],["64px",{"_index":458,"title":{},"body":{"components/PostsComponent.html":{}}}],["7",{"_index":611,"title":{},"body":{"overview.html":{}}}],["8",{"_index":609,"title":{},"body":{"overview.html":{}}}],["80",{"_index":265,"title":{},"body":{"components/FeedComponent.html":{}}}],["85vh",{"_index":266,"title":{},"body":{"components/FeedComponent.html":{}}}],["90vh",{"_index":48,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/SpinnerComponent.html":{}}}],["_comments",{"_index":393,"title":{},"body":{"components/PostsComponent.html":{}}}],["_feed",{"_index":226,"title":{},"body":{"components/FeedComponent.html":{}}}],["_http",{"_index":203,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["_post",{"_index":391,"title":{},"body":{"components/PostsComponent.html":{}}}],["accent",{"_index":304,"title":{},"body":{"components/FeedComponent.html":{}}}],["activatedroute",{"_index":390,"title":{},"body":{"components/PostsComponent.html":{}}}],["actual_component",{"_index":74,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":593,"title":{},"body":{"index.html":{}}}],["anchorscrolling",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["angular",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/scrolling",{"_index":372,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":313,"title":{},"body":{"modules/FeedModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["angular/compiler",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":377,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":375,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":379,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":241,"title":{},"body":{"components/FeedComponent.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{}}}],["angular/platform",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/PostsComponent.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["api",{"_index":18,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{}}}],["api/comments.service",{"_index":411,"title":{},"body":{"components/PostsComponent.html":{}}}],["api/feed.service",{"_index":244,"title":{},"body":{"components/FeedComponent.html":{}}}],["api/http",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["api/posts.service",{"_index":412,"title":{},"body":{"components/PostsComponent.html":{}}}],["apierrorcomponent",{"_index":1,"title":{"components/ApiErrorComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["app.component",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":63,"title":{"components/AppComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applaud",{"_index":431,"title":{},"body":{"components/PostsComponent.html":{}}}],["appmodule",{"_index":121,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":133,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":575,"title":{},"body":{"index.html":{}}}],["auto",{"_index":445,"title":{},"body":{"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["automatically",{"_index":565,"title":{},"body":{"index.html":{}}}],["available",{"_index":608,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":456,"title":{},"body":{"components/PostsComponent.html":{}}}],["background",{"_index":50,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["bar",{"_index":242,"title":{},"body":{"components/FeedComponent.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{}}}],["body",{"_index":190,"title":{},"body":{"interfaces/Comments.html":{},"components/FeedComponent.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{}}}],["boolean",{"_index":34,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["bootstrap",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":459,"title":{},"body":{"components/PostsComponent.html":{}}}],["bottom",{"_index":448,"title":{},"body":{"components/PostsComponent.html":{}}}],["box",{"_index":288,"title":{},"body":{"components/FeedComponent.html":{}}}],["brand",{"_index":331,"title":{},"body":{"components/HeaderComponent.html":{}}}],["breadcrumb",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["breadcrumbmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["breadcrumbservice",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":606,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":574,"title":{},"body":{"index.html":{}}}],["button",{"_index":469,"title":{},"body":{"components/PostsComponent.html":{}}}],["capabilities",{"_index":595,"title":{},"body":{"index.html":{}}}],["card",{"_index":268,"title":{},"body":{"components/FeedComponent.html":{}}}],["catcherror",{"_index":350,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":354,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["center",{"_index":54,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["change",{"_index":567,"title":{},"body":{"index.html":{}}}],["check",{"_index":600,"title":{},"body":{"index.html":{}}}],["choice",{"_index":589,"title":{},"body":{"index.html":{}}}],["clamp",{"_index":290,"title":{},"body":{"components/FeedComponent.html":{}}}],["class",{"_index":45,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{}}}],["cli",{"_index":555,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_feedmodule",{"_index":306,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_declarations",{"_index":308,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_imports",{"_index":307,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":492,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_declarations",{"_index":493,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":494,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":504,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":505,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":506,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":569,"title":{},"body":{"index.html":{}}}],["color",{"_index":303,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["columns",{"_index":451,"title":{},"body":{"components/PostsComponent.html":{}}}],["command",{"_index":590,"title":{},"body":{"index.html":{}}}],["comment",{"_index":386,"title":{},"body":{"components/PostsComponent.html":{}}}],["comment.body||'loading",{"_index":437,"title":{},"body":{"components/PostsComponent.html":{}}}],["comment.body||\\'loading",{"_index":490,"title":{},"body":{"components/PostsComponent.html":{}}}],["comment?.name|titlecase)||'loading",{"_index":436,"title":{},"body":{"components/PostsComponent.html":{}}}],["comment?.name|titlecase)||\\'loading",{"_index":489,"title":{},"body":{"components/PostsComponent.html":{}}}],["commenting",{"_index":485,"title":{},"body":{"components/PostsComponent.html":{}}}],["comments",{"_index":186,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"components/PostsComponent.html":{},"coverage.html":{}}}],["commentscount",{"_index":385,"title":{},"body":{"components/PostsComponent.html":{}}}],["commentsservice",{"_index":196,"title":{"injectables/CommentsService.html":{}},"body":{"injectables/CommentsService.html":{},"components/PostsComponent.html":{},"coverage.html":{}}}],["commonmodule",{"_index":312,"title":{},"body":{"modules/FeedModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{}}}],["component",{"_index":0,"title":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/PostsRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":60,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["console.log('client",{"_index":359,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log('server",{"_index":368,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["const",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{},"modules/PostsRoutingModule.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{}}}],["constructor(_http",{"_index":200,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["constructor(breadcrumbservice",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["constructor(router",{"_index":224,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["content",{"_index":454,"title":{},"body":{"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["cover",{"_index":284,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["coverage",{"_index":518,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtitle",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["createtitle(routescollection",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["crumbs",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["curr",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["curr.displayname",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":332,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostsComponent.html":{}}}],["customstyles/mixin.scss",{"_index":439,"title":{},"body":{"components/PostsComponent.html":{}}}],["customstyles/palette.scss",{"_index":263,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["darkgray",{"_index":487,"title":{},"body":{"components/PostsComponent.html":{}}}],["darkslategray",{"_index":488,"title":{},"body":{"components/PostsComponent.html":{}}}],["data",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["declarations",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decoration",{"_index":300,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{}}}],["dependencies",{"_index":123,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":449,"title":{},"body":{"components/PostsComponent.html":{}}}],["dev",{"_index":562,"title":{},"body":{"index.html":{}}}],["development",{"_index":557,"title":{},"body":{"index.html":{}}}],["directive",{"_index":58,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["directives",{"_index":73,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":573,"title":{},"body":{"index.html":{}}}],["directory",{"_index":578,"title":{},"body":{"index.html":{}}}],["display",{"_index":286,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["dist",{"_index":577,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":434,"title":{},"body":{"components/PostsComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["duration",{"_index":424,"title":{},"body":{"components/PostsComponent.html":{}}}],["dynamic",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":587,"title":{},"body":{"index.html":{}}}],["element",{"_index":57,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["ellipsis",{"_index":281,"title":{},"body":{"components/FeedComponent.html":{}}}],["email",{"_index":191,"title":{},"body":{"interfaces/Comments.html":{}}}],["enabled",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":586,"title":{},"body":{"index.html":{}}}],["environment",{"_index":206,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":217,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["error",{"_index":19,"title":{},"body":{"components/ApiErrorComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["error'},{'name",{"_index":62,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["error.component",{"_index":510,"title":{},"body":{"modules/SharedModule.html":{}}}],["error.component.html",{"_index":23,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["error.component.scss",{"_index":21,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["error.component.ts",{"_index":12,"title":{},"body":{"components/ApiErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":31,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["error.component.ts:14",{"_index":38,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["error.error",{"_index":356,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["error.interceptor.ts",{"_index":337,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:15",{"_index":343,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":362,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error/api",{"_index":11,"title":{},"body":{"components/ApiErrorComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["errorevent",{"_index":358,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errormsg",{"_index":355,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["execute",{"_index":583,"title":{},"body":{"index.html":{}}}],["export",{"_index":44,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{}}}],["exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["f7f7f7",{"_index":483,"title":{},"body":{"components/PostsComponent.html":{}}}],["false",{"_index":37,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["favorite_border",{"_index":435,"title":{},"body":{"components/PostsComponent.html":{}}}],["feed",{"_index":211,"title":{"interfaces/Feed.html":{}},"body":{"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["feed'},{'name",{"_index":66,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["feed.component",{"_index":314,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":216,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":215,"title":{},"body":{"components/FeedComponent.html":{}}}],["feedcomponent",{"_index":65,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedmodule",{"_index":305,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"modules.html":{},"overview.html":{}}}],["feedroutingmodule",{"_index":309,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["feeds",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["feedservice",{"_index":227,"title":{"injectables/FeedService.html":{}},"body":{"components/FeedComponent.html":{},"injectables/FeedService.html":{},"coverage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["files",{"_index":568,"title":{},"body":{"index.html":{}}}],["first",{"_index":592,"title":{},"body":{"index.html":{}}}],["fit",{"_index":283,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["follow",{"_index":387,"title":{},"body":{"components/PostsComponent.html":{}}}],["follow(id",{"_index":396,"title":{},"body":{"components/PostsComponent.html":{}}}],["font",{"_index":465,"title":{},"body":{"components/PostsComponent.html":{}}}],["full",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":596,"title":{},"body":{"index.html":{}}}],["generate",{"_index":571,"title":{},"body":{"index.html":{}}}],["generated",{"_index":554,"title":{},"body":{"index.html":{}}}],["getcomments",{"_index":199,"title":{},"body":{"injectables/CommentsService.html":{},"components/PostsComponent.html":{}}}],["getcomments(id",{"_index":398,"title":{},"body":{"components/PostsComponent.html":{}}}],["getcomments(postid",{"_index":204,"title":{},"body":{"injectables/CommentsService.html":{}}}],["getfeed",{"_index":319,"title":{},"body":{"injectables/FeedService.html":{}}}],["getfeeds",{"_index":221,"title":{},"body":{"components/FeedComponent.html":{}}}],["getpost",{"_index":388,"title":{},"body":{"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["getpost(id",{"_index":400,"title":{},"body":{"components/PostsComponent.html":{}}}],["getpost(postid",{"_index":501,"title":{},"body":{"injectables/PostsService.html":{}}}],["getting",{"_index":550,"title":{"index.html":{}},"body":{}}],["go",{"_index":599,"title":{},"body":{"index.html":{}}}],["gotopost",{"_index":222,"title":{},"body":{"components/FeedComponent.html":{}}}],["gotopost(id",{"_index":232,"title":{},"body":{"components/FeedComponent.html":{}}}],["graph",{"_index":607,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":450,"title":{},"body":{"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["grow",{"_index":517,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["h",{"_index":440,"title":{},"body":{"components/PostsComponent.html":{}}}],["hasapifailed",{"_index":28,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["header",{"_index":297,"title":{},"body":{"components/FeedComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":68,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["header.component.html",{"_index":325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":324,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":508,"title":{},"body":{"modules/SharedModule.html":{}}}],["headercomponent",{"_index":67,"title":{"components/HeaderComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":47,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["help",{"_index":597,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":279,"title":{},"body":{"components/FeedComponent.html":{}}}],["hover",{"_index":302,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["html",{"_index":56,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["http://localhost:4200",{"_index":564,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":201,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["httpclientmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorinterceptor",{"_index":135,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httperrorresponse",{"_index":348,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":346,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":342,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":347,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":340,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://jsonplaceholder.typicode.com/posts",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":480,"title":{},"body":{"components/PostsComponent.html":{}}}],["id",{"_index":192,"title":{},"body":{"interfaces/Comments.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{}}}],["identifier",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["idfromurl",{"_index":414,"title":{},"body":{"components/PostsComponent.html":{}}}],["idfromurl['id",{"_index":416,"title":{},"body":{"components/PostsComponent.html":{}}}],["image",{"_index":51,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{}}}],["import('./feed/feed.module').then(m",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./posts/posts.module').then(m",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":49,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{}}}],["imports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":474,"title":{},"body":{"components/PostsComponent.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{}}}],["injectable",{"_index":195,"title":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["injectables",{"_index":197,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{},"overview.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/SpinnerComponent.html":{}}}],["inputs",{"_index":27,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/SpinnerComponent.html":{}}}],["instanceof",{"_index":357,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept",{"_index":338,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(request",{"_index":339,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":334,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":335,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":185,"title":{"interfaces/Comments.html":{},"interfaces/Feed.html":{},"interfaces/Posts.html":{}},"body":{"interfaces/Comments.html":{},"interfaces/Feed.html":{},"interfaces/Posts.html":{},"coverage.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/Comments.html":{},"interfaces/Feed.html":{},"interfaces/Posts.html":{},"overview.html":{}}}],["isdataloaded",{"_index":218,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["john",{"_index":433,"title":{},"body":{"components/PostsComponent.html":{}}}],["justify",{"_index":453,"title":{},"body":{"components/PostsComponent.html":{}}}],["karma",{"_index":585,"title":{},"body":{"index.html":{}}}],["later",{"_index":367,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["left",{"_index":463,"title":{},"body":{"components/PostsComponent.html":{}}}],["legend",{"_index":55,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["letter",{"_index":294,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightgray",{"_index":472,"title":{},"body":{"components/PostsComponent.html":{}}}],["likes",{"_index":481,"title":{},"body":{"components/PostsComponent.html":{}}}],["line",{"_index":289,"title":{},"body":{"components/FeedComponent.html":{}}}],["loadchildren",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":432,"title":{},"body":{"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["m.feedmodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.postsmodule",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":486,"title":{},"body":{"components/PostsComponent.html":{}}}],["margin",{"_index":272,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["mat",{"_index":267,"title":{},"body":{"components/FeedComponent.html":{}}}],["matbuttonmodule",{"_index":376,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":374,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":76,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material/material.module",{"_index":315,"title":{},"body":{"modules/FeedModule.html":{},"modules/PostsModule.html":{}}}],["materialcomponents",{"_index":380,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["materialmodule",{"_index":310,"title":{"modules/MaterialModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodule",{"_index":378,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":229,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["matsnackbarmodule",{"_index":373,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":269,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["message",{"_index":363,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{}}}],["miscellaneous",{"_index":612,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/comments.models",{"_index":208,"title":{},"body":{"injectables/CommentsService.html":{},"components/PostsComponent.html":{}}}],["models/feed.models",{"_index":245,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedService.html":{}}}],["models/posts.models",{"_index":413,"title":{},"body":{"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["module",{"_index":120,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":122,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":598,"title":{},"body":{"index.html":{}}}],["multi",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["navbar",{"_index":330,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":563,"title":{},"body":{"index.html":{}}}],["need",{"_index":591,"title":{},"body":{"index.html":{}}}],["new",{"_index":239,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":341,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["next.handle(request",{"_index":352,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":560,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":223,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["ngx",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["none",{"_index":301,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["nowrap",{"_index":277,"title":{},"body":{"components/FeedComponent.html":{}}}],["number",{"_index":194,"title":{},"body":{"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["object",{"_index":282,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":345,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["occured",{"_index":365,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ok",{"_index":255,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["oops",{"_index":364,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["optional",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["orient",{"_index":292,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":278,"title":{},"body":{"components/FeedComponent.html":{}}}],["overview",{"_index":601,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":535,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":446,"title":{},"body":{"components/PostsComponent.html":{}}}],["page",{"_index":603,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["parseint(idfromurl['id",{"_index":418,"title":{},"body":{"components/PostsComponent.html":{}}}],["path",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/PostsRoutingModule.html":{}}}],["pathmatch",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":475,"title":{},"body":{"components/PostsComponent.html":{}}}],["pipe",{"_index":353,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["place",{"_index":516,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["platform",{"_index":588,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":333,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostsComponent.html":{}}}],["portrait",{"_index":478,"title":{},"body":{"components/PostsComponent.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["post",{"_index":285,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["post?.body",{"_index":260,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["post?.title|titlecase",{"_index":257,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["post?.userid",{"_index":259,"title":{},"body":{"components/FeedComponent.html":{}}}],["postid",{"_index":193,"title":{},"body":{"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"injectables/PostsService.html":{}}}],["posts",{"_index":176,"title":{"interfaces/Posts.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["posts'},{'name",{"_index":70,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["posts.component",{"_index":497,"title":{},"body":{"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{}}}],["posts.component.html",{"_index":384,"title":{},"body":{"components/PostsComponent.html":{}}}],["posts.component.scss",{"_index":383,"title":{},"body":{"components/PostsComponent.html":{}}}],["posts/:id",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["postscomponent",{"_index":69,"title":{"components/PostsComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postsmodule",{"_index":491,"title":{"modules/PostsModule.html":{}},"body":{"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsroutingmodule",{"_index":495,"title":{"modules/PostsRoutingModule.html":{}},"body":{"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":392,"title":{"injectables/PostsService.html":{}},"body":{"components/PostsComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["poststest",{"_index":328,"title":{},"body":{"components/HeaderComponent.html":{}}}],["postsui",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["preloadingstrategy",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prev",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["production",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":553,"title":{},"body":{"index.html":{}}}],["properties",{"_index":189,"title":{},"body":{"interfaces/Comments.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{}}}],["provide",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":209,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["providers",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":219,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["quicklink",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["quicklinkmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["quicklinkstrategy",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["radius",{"_index":460,"title":{},"body":{"components/PostsComponent.html":{}}}],["redirectto",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":602,"title":{},"body":{"index.html":{}}}],["reload",{"_index":566,"title":{},"body":{"index.html":{}}}],["repeat(2",{"_index":452,"title":{},"body":{"components/PostsComponent.html":{}}}],["reply",{"_index":438,"title":{},"body":{"components/PostsComponent.html":{}}}],["request",{"_index":344,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["res",{"_index":251,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["res.length",{"_index":429,"title":{},"body":{"components/PostsComponent.html":{}}}],["reset",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["result",{"_index":75,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":77,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{}}}],["root",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["root'},{'name",{"_index":64,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["route",{"_index":389,"title":{},"body":{"components/PostsComponent.html":{}}}],["route.displayname",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":225,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["routermodule",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/PostsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":317,"title":{},"body":{"modules/FeedRoutingModule.html":{},"modules/PostsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":164,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/PostsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routescollection",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["routescollection.filter((route",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["routetitle",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["routing.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{}}}],["routing.module.ts",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/PostsRoutingModule.html":{}}}],["run",{"_index":559,"title":{},"body":{"index.html":{}}}],["running",{"_index":579,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":243,"title":{},"body":{"components/FeedComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/PostsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":351,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["scaffolding",{"_index":570,"title":{},"body":{"index.html":{}}}],["scrollingmodule",{"_index":371,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["scrollpositionrestoration",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":329,"title":{},"body":{"components/HeaderComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["serve",{"_index":561,"title":{},"body":{"index.html":{}}}],["server",{"_index":558,"title":{},"body":{"index.html":{}}}],["share",{"_index":262,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared/shared.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{}}}],["sharedmodule",{"_index":134,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":360,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["size",{"_index":299,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["snackbar",{"_index":228,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["solid",{"_index":471,"title":{},"body":{"components/PostsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FeedService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/MaterialModule.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"modules/PostsModule.html":{},"modules/PostsRoutingModule.html":{},"injectables/PostsService.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["space",{"_index":276,"title":{},"body":{"components/FeedComponent.html":{}}}],["spacing",{"_index":295,"title":{},"body":{"components/FeedComponent.html":{}}}],["span",{"_index":482,"title":{},"body":{"components/PostsComponent.html":{}}}],["spinner",{"_index":72,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner.component.html",{"_index":513,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":512,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":509,"title":{},"body":{"modules/SharedModule.html":{}}}],["spinnercomponent",{"_index":71,"title":{"components/SpinnerComponent.html":{}},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../environment.prod.ts",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api/comments.service.ts",{"_index":198,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/app/api/comments.service.ts:13",{"_index":205,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/api/comments.service.ts:9",{"_index":202,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/api/feed.service.ts",{"_index":318,"title":{},"body":{"injectables/FeedService.html":{},"coverage.html":{}}}],["src/app/api/feed.service.ts:13",{"_index":321,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/app/api/feed.service.ts:9",{"_index":320,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/app/api/http",{"_index":336,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/api/posts.service.ts",{"_index":499,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/app/api/posts.service.ts:13",{"_index":502,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/api/posts.service.ts:9",{"_index":500,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/app",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/feed/feed",{"_index":316,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/feed/feed.component.ts",{"_index":214,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["src/app/feed/feed.component.ts:15",{"_index":240,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:16",{"_index":237,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:17",{"_index":236,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:18",{"_index":238,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:19",{"_index":230,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:23",{"_index":235,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:26",{"_index":234,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:29",{"_index":231,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:39",{"_index":233,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.module.ts",{"_index":311,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/material/material.module.ts",{"_index":370,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/comments.models.ts",{"_index":188,"title":{},"body":{"interfaces/Comments.html":{},"coverage.html":{}}}],["src/app/models/feed.models.ts",{"_index":212,"title":{},"body":{"interfaces/Feed.html":{},"coverage.html":{}}}],["src/app/models/posts.models.ts",{"_index":381,"title":{},"body":{"interfaces/Posts.html":{},"coverage.html":{}}}],["src/app/posts/posts",{"_index":498,"title":{},"body":{"modules/PostsRoutingModule.html":{}}}],["src/app/posts/posts.component.ts",{"_index":382,"title":{},"body":{"components/PostsComponent.html":{},"coverage.html":{}}}],["src/app/posts/posts.component.ts:17",{"_index":405,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:18",{"_index":407,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:19",{"_index":410,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:20",{"_index":409,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:21",{"_index":408,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:23",{"_index":394,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:33",{"_index":404,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:42",{"_index":403,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:47",{"_index":401,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:58",{"_index":399,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:70",{"_index":397,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:73",{"_index":402,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.component.ts:76",{"_index":395,"title":{},"body":{"components/PostsComponent.html":{}}}],["src/app/posts/posts.module.ts",{"_index":496,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/app/shared/api",{"_index":10,"title":{},"body":{"components/ApiErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":323,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:12",{"_index":327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":326,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":507,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/spinner/spinner.component.ts",{"_index":511,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/app/shared/spinner/spinner.component.ts:10",{"_index":514,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/spinner/spinner.component.ts:14",{"_index":515,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/environments/environment",{"_index":207,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FeedService.html":{},"injectables/PostsService.html":{}}}],["src/environments/environment.prod.ts",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":455,"title":{},"body":{"components/PostsComponent.html":{}}}],["started",{"_index":551,"title":{"index.html":{}},"body":{}}],["statements",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":361,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["stored",{"_index":576,"title":{},"body":{"index.html":{}}}],["string",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comments.html":{},"interfaces/Feed.html":{},"interfaces/Posts.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["sub",{"_index":468,"title":{},"body":{"components/PostsComponent.html":{}}}],["subscription",{"_index":220,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["support",{"_index":604,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":605,"title":{},"body":{"modules.html":{}}}],["table",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":477,"title":{},"body":{"components/PostsComponent.html":{}}}],["tb",{"_index":444,"title":{},"body":{"components/PostsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["test",{"_index":582,"title":{},"body":{"index.html":{}}}],["testing",{"_index":594,"title":{},"body":{"index.html":{}}}],["tests",{"_index":581,"title":{},"body":{"index.html":{}}}],["text",{"_index":280,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["this._comments.getcomments(id).subscribe(res",{"_index":426,"title":{},"body":{"components/PostsComponent.html":{}}}],["this._feed.getfeed().subscribe(res",{"_index":249,"title":{},"body":{"components/FeedComponent.html":{}}}],["this._http.get(`${environment.feeds",{"_index":322,"title":{},"body":{"injectables/FeedService.html":{}}}],["this._http.get(`${environment.feeds}/${postid",{"_index":503,"title":{},"body":{"injectables/PostsService.html":{}}}],["this._http.get(`${environment.feeds}/${postid}/comments",{"_index":210,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this._post.getpost(id).subscribe(res",{"_index":421,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.breadcrumbservice.breadcrumbchanged.subscribe(crumbs",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["this.comments",{"_index":427,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.commentscount",{"_index":428,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.feed",{"_index":250,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.getcomments(idfromurl['id",{"_index":420,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.getfeeds",{"_index":246,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.getpost(idfromurl['id",{"_index":419,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.hasapifailed",{"_index":253,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["this.isdataloaded",{"_index":252,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["this.post",{"_index":422,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.route.snapshot.params",{"_index":415,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.router.navigate",{"_index":417,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.router.navigate(['/posts",{"_index":256,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.snackbar.open('login",{"_index":430,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.snackbar.open(`${err?.message",{"_index":254,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.snackbar.open(err",{"_index":423,"title":{},"body":{"components/PostsComponent.html":{}}}],["this.subscription.add",{"_index":248,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":247,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["this.titleservice.settitle(this.createtitle(crumbs",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titlestostring(titles",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["throwerror",{"_index":349,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(errormsg",{"_index":369,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["title",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"interfaces/Posts.html":{}}}],["titles",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["titles.length",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["titles.reduce((prev",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["titleservice",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestostring",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestostring(titles",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":447,"title":{},"body":{"components/PostsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["true",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":366,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["tslib",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"interfaces/Comments.html":{},"injectables/CommentsService.html":{},"interfaces/Feed.html":{},"components/FeedComponent.html":{},"injectables/FeedService.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/Posts.html":{},"components/PostsComponent.html":{},"injectables/PostsService.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":552,"title":{},"body":{"index.html":{}}}],["unit",{"_index":580,"title":{},"body":{"index.html":{}}}],["unset",{"_index":476,"title":{},"body":{"components/PostsComponent.html":{}}}],["up",{"_index":479,"title":{},"body":{"components/PostsComponent.html":{}}}],["url('../../../assets/svg/error.svg",{"_index":52,"title":{},"body":{"components/ApiErrorComponent.html":{}}}],["url('https://i.pravatar.cc/300",{"_index":298,"title":{},"body":{"components/FeedComponent.html":{}}}],["url('https://i.pravatar.cc/64",{"_index":457,"title":{},"body":{"components/PostsComponent.html":{}}}],["use",{"_index":572,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":258,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["userid",{"_index":213,"title":{},"body":{"interfaces/Feed.html":{},"interfaces/Posts.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/FeedComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["variable",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":613,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":556,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":293,"title":{},"body":{"components/FeedComponent.html":{}}}],["vh",{"_index":264,"title":{},"body":{"components/FeedComponent.html":{}}}],["via",{"_index":584,"title":{},"body":{"index.html":{}}}],["view",{"_index":261,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/HeaderComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["webkit",{"_index":287,"title":{},"body":{"components/FeedComponent.html":{}}}],["weight",{"_index":466,"title":{},"body":{"components/PostsComponent.html":{}}}],["white",{"_index":275,"title":{},"body":{"components/FeedComponent.html":{}}}],["width",{"_index":270,"title":{},"body":{"components/FeedComponent.html":{},"components/PostsComponent.html":{}}}],["wrapper",{"_index":46,"title":{},"body":{"components/ApiErrorComponent.html":{},"components/PostsComponent.html":{},"components/SpinnerComponent.html":{}}}],["zone.js",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/PostsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiErrorComponent.html":{"url":"components/ApiErrorComponent.html","title":"component - ApiErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/api-error/api-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-error\n            \n\n            \n                styleUrls\n                ./api-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./api-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasAPIFailed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api-error/api-error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasAPIFailed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/api-error/api-error.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-error/api-error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-api-error',\n  templateUrl: './api-error.component.html',\n  styleUrls: ['./api-error.component.scss']\n})\nexport class ApiErrorComponent implements OnInit {\n  \n  @Input() hasAPIFailed: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./api-error.component.scss\n                \n                .wrapper {\n  height: 90vh !important;\n  background-image: url('../../../assets/svg/error.svg');\n  background-position: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTitle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                titlesToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadcrumbService: BreadcrumbService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadcrumbService\n                                                  \n                                                        \n                                                                    BreadcrumbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTitle(routesCollection: Breadcrumb[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routesCollection\n                                    \n                                            Breadcrumb[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            titlesToString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    titlesToString(titles: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    titles\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Breadcrumb, BreadcrumbService } from 'angular-crumbs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private breadcrumbService: BreadcrumbService, private titleService: Title) { }\n\n  ngOnInit(): void {\n    this.breadcrumbService.breadcrumbChanged.subscribe(crumbs => {\n      this.titleService.setTitle(this.createTitle(crumbs));\n    })\n  }\n\n  private createTitle(routesCollection: Breadcrumb[]) {\n    const title = 'PostsUi';\n    const titles = routesCollection.filter((route) => route.displayName);\n\n    if (!titles.length) { return title; }\n\n    const routeTitle = this.titlesToString(titles);\n    return `${routeTitle} ${title}`;\n  }\n\n  private titlesToString(titles: any[]) {\n    return titles.reduce((prev, curr) => {\n      return `${curr.displayName} - ${prev}`;\n    }, '');\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nAppModule -->\n\nHttpErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BreadcrumbModule } from 'angular-crumbs';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpErrorInterceptor } from './api/http-error.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    QuicklinkModule,\n    BreadcrumbModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuicklinkStrategy } from 'ngx-quicklink';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => \"import('./feed/feed.module').then(m => m.FeedModule)\", data: { breadcrumb: 'Feeds' } },\n  { path: 'posts/:id', loadChildren: () => \"import('./posts/posts.module').then(m => m.PostsModule)\", data: { breadcrumb: 'Posts' } },\n  { path: '**', pathMatch: 'full', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: QuicklinkStrategy, anchorScrolling: 'enabled', scrollPositionRestoration: 'enabled' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/comments.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        postId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Comments {\n    postId: number;\n    id: number;\n    name: string;\n    email: string;\n    body: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/comments.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/comments.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComments\n                        \n                        \n                    \n                \n            \n            \n                \ngetComments(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/comments.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Comments } from '../models/comments.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  constructor(private _http: HttpClient) { }\n\n  getComments(postId: number) {\n    return this._http.get(`${environment.feeds}/${postId}/comments`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Feed.html":{"url":"interfaces/Feed.html","title":"interface - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/feed.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Feed {\n    userId: number;\n    id: number;\n    title: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                err\n                            \n                            \n                                feed\n                            \n                            \n                                hasAPIFailed\n                            \n                            \n                                isDataLoaded\n                            \n                            \n                                    Public\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFeeds\n                            \n                            \n                                goToPost\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _feed: FeedService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed/feed.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _feed\n                                                  \n                                                        \n                                                                        FeedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFeeds\n                        \n                        \n                    \n                \n            \n            \n                \ngetFeeds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPost\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            err\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Feed[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAPIFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDataLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { FeedService } from '../api/feed.service';\nimport { Feed } from '../models/feed.models';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit {\n\n  public subscription = new Subscription();\n  feed: Feed[] = [];\n  err: any;\n  isDataLoaded: boolean = false;\n  hasAPIFailed: boolean = false;\n\n  constructor(private router: Router, private _feed: FeedService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.getFeeds();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  getFeeds() {\n    this.subscription.add(\n      this._feed.getFeed().subscribe(res => {\n        this.feed = res;\n        this.isDataLoaded = true;\n      },\n        err => { this.isDataLoaded = true; this.hasAPIFailed = true; this.snackBar.open(`${err?.message}`, 'OK'); })\n    );\n  }\n\n  goToPost(id: number) {\n    this.router.navigate(['/posts', id])\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    \n      \n        \n          \n          \n            {{post?.title|titlecase}}\n          \n          By User\n            #{{post?.userId}}\n        \n        \n        \n          \n            {{post?.body}}\n          \n        \n        \n          VIEW\n          SHARE\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                @import '../../customStyles/palette.scss';\n\n.vh-80 {\n  height: 85vh;\n}\n\n.mat-card {\n  max-width: 400px;\n  margin: 5px;\n}\n\n.mat-card-title {\n  width: 300px !important;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.mat-card-image {\n  max-height: 300px;\n  object-fit: cover;\n}\n\n.post-body {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  letter-spacing: 0.9px;\n  overflow: hidden;\n}\n\n.mat-header-image {\n  background-image: url('https://i.pravatar.cc/300');\n  background-size: cover;\n}\n\na {\n  text-decoration: none !important;\n\n  &:hover {\n    color: $accent-color;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{post?.title|titlecase}}                    By User            #{{post?.userId}}                                              {{post?.body}}                                    VIEW          SHARE                    '\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_declarations\n\n\n\n\nFeedComponent\n\nFeedComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFeedModule -->\n\nMaterialModule->FeedModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeedModule -->\n\nSharedModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeedRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeedRoutingModule } from './feed-routing.module';\nimport { FeedComponent } from './feed.component';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    FeedComponent\n  ],\n  imports: [\n    CommonModule,\n    FeedRoutingModule,\n    SharedModule,\n    MaterialModule\n  ]\n})\nexport class FeedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FeedComponent } from './feed.component';\n\nconst routes: Routes = [\n  { path: '', component: FeedComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedService.html":{"url":"injectables/FeedService.html","title":"injectable - FeedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/feed.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/feed.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \ngetFeed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/feed.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Feed } from '../models/feed.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n\n  constructor(private _http: HttpClient) { }\n\n  getFeed() {\n    return this._http.get(`${environment.feeds}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    PostsTest\n    \n      \n    \n    \n      \n        \n          Feed\n        \n      \n      \n        \n        Search\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .navbar-brand {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PostsTest                                          Feed                                    Search            '\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/http-error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/http-error.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          let errorMsg = {};\n          if (error.error instanceof ErrorEvent) {\n            console.log('Client side error');\n            errorMsg = { status: error.status, message: 'Oops, an error occured. Try Later!' };\n          }\n          else {\n            console.log('Server side error');\n            errorMsg = { status: error.status, message: 'Oops, an error occured. Try Later!' };\n          }\n          return throwError(errorMsg);\n        })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst MaterialComponents = [\n  ScrollingModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatIconModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MaterialComponents,\n  ],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Posts.html":{"url":"interfaces/Posts.html","title":"interface - Posts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Posts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/posts.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Posts {\n    userId: number;\n    id: number;\n    title: string;\n    body: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostsComponent.html":{"url":"components/PostsComponent.html","title":"component - PostsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/posts.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-posts\n            \n\n            \n                styleUrls\n                ./posts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./posts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comments\n                            \n                            \n                                commentsCount\n                            \n                            \n                                hasAPIFailed\n                            \n                            \n                                isDataLoaded\n                            \n                            \n                                post\n                            \n                            \n                                    Public\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                follow\n                            \n                            \n                                getComments\n                            \n                            \n                                getPost\n                            \n                            \n                                like\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, _post: PostsService, _comments: CommentsService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/posts.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _post\n                                                  \n                                                        \n                                                                        PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _comments\n                                                  \n                                                        \n                                                                        CommentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            comment\n                        \n                        \n                    \n                \n            \n            \n                \ncomment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            follow\n                        \n                        \n                    \n                \n            \n            \n                \nfollow(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComments\n                        \n                        \n                    \n                \n            \n            \n                \ngetComments(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetPost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            like\n                        \n                        \n                    \n                \n            \n            \n                \nlike()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posts/posts.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comments[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAPIFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDataLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Posts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/posts.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CommentsService } from '../api/comments.service';\nimport { PostsService } from '../api/posts.service';\nimport { Comments } from '../models/comments.models';\nimport { Posts } from '../models/posts.models';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  comments: Comments[] = [];\n  commentsCount: number = 0;\n  post!: Posts;\n  isDataLoaded: boolean = false;\n  hasAPIFailed: boolean = false;\n\n  public subscription = new Subscription();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private _post: PostsService,\n    private _comments: CommentsService,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): any {\n    const idFromUrl = this.route.snapshot.params;\n\n    if (!idFromUrl['id']) return this.router.navigate(['/']);\n    if (!parseInt(idFromUrl['id'])) return this.router.navigate(['/']);\n\n    this.getPost(idFromUrl['id']);\n    this.getComments(idFromUrl['id']);\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.isDataLoaded = false;\n  }\n\n  getPost(id: number) {\n    this.subscription.add(\n      this._post.getPost(id).subscribe(res => {\n        this.post = res;\n        this.isDataLoaded = true;\n      },\n        err => {\n          this.snackBar.open(err, 'OK', { duration: 3000 })\n        })\n    )\n  }\n  getComments(id: number) {\n    this.subscription.add(\n      this._comments.getComments(id).subscribe(res => {\n        this.comments = res;\n        this.commentsCount = res.length || 0;\n      },\n        err => {\n          this.isDataLoaded = true; this.hasAPIFailed = true;\n          this.snackBar.open(err, 'OK', { duration: 3000 })\n        })\n    )\n  }\n  follow(id: number) {\n    this.snackBar.open('Login to follow!', 'OK', { duration: 3000 })\n  }\n  like() {\n    this.snackBar.open('Login to applaud!', 'OK', { duration: 3000 })\n  }\n  comment() {\n    this.snackBar.open('Login to comment!', 'OK', { duration: 3000 })\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    \n      {{(post?.title|titlecase) || 'Loading . . .'}}\n      \n        \n        \n          John Doe\n          FOLLOW\n        \n\n      \n\n    \n    \n      \n    \n    {{post?.body}}\n  \n  \n    \n      favorite_border\n      {{commentsCount}}\n    \n    \n      comment\n      {{commentsCount}}\n    \n  \n  \n    Comments\n    \n      \n        \n          \n          \n            {{(comment?.name|titlecase)||'Loading . . .'}}\n            {{comment.body||'Loading . . .'}}\n            Reply\n          \n        \n\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./posts.component.scss\n                \n                @import '../../customStyles/palette.scss';\n@import '../../customStyles/mixin.scss';\n\n.h-550 {\n  height: 550px;\n}\n\n.margin-30px-tb {\n  margin: 30px auto;\n}\n\n.padding-30px {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n\n.user-details {\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  justify-content: start;\n\n  .user-avatar-image {\n    background-image: url('https://i.pravatar.cc/64');\n    background-size: cover;\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    margin: 10px 0;\n  }\n\n  .user-name-follow {\n    margin: auto;\n    padding-left: 15px;\n\n    .user-name {\n      margin: auto;\n      font-weight: 600;\n      color: $sub-text-color;\n    }\n\n    button {\n      margin-left: 15px;\n      border: 1px solid lightgray;\n    }\n  }\n\n\n}\n\n.post-image {\n  max-height: 640px;\n  object-fit: cover;\n\n  @include for-phone-only {\n    height: unset;\n  }\n\n  @include for-tablet-portrait-up {\n    height: unset;\n  }\n}\n\n.comments-icon-wrapper {\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  justify-content: start;\n}\n\n.likes,\n.comments {\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  justify-content: center;\n\n  span {\n    padding: 0 5px;\n  }\n}\n\n.comments-content {\n  background: #f7f7f7;\n  padding: 50px;\n  margin: 30px 0;\n\n  .commenting-user-details {\n    display: grid;\n    grid-template-columns: repeat(2, auto);\n    justify-content: start;\n    margin-bottom: 15px;\n\n    .commenting-user-avatar-image {\n      background-image: url('https://i.pravatar.cc/64');\n      background-size: cover;\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n      margin: 10px 0;\n    }\n\n    .comment-body {\n      margin: auto;\n      padding-left: 15px;\n\n      .commenting-user-name {\n        margin: auto;\n        font-weight: 600;\n        color: $sub-text-color;\n      }\n    }\n  }\n}\n\n.reply-mail {\n  text-decoration: none;\n  color: darkgray;\n\n  &:hover {\n    color: darkslategray;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{(post?.title|titlecase) || \\'Loading . . .\\'}}                                John Doe          FOLLOW                                    {{post?.body}}              favorite_border      {{commentsCount}}              comment      {{commentsCount}}            Comments                                                  {{(comment?.name|titlecase)||\\'Loading . . .\\'}}            {{comment.body||\\'Loading . . .\\'}}            Reply                              '\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nPostsComponent\n\nPostsComponent\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostsComponent->PostsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nPostsModule -->\n\nMaterialModule->PostsModule\n\n\n\n\n\nPostsRoutingModule\n\nPostsRoutingModule\n\nPostsModule -->\n\nPostsRoutingModule->PostsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPostsModule -->\n\nSharedModule->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/posts/posts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            PostsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { PostsComponent } from './posts.component';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    PostsComponent\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    SharedModule,\n    MaterialModule\n  ]\n})\nexport class PostsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsRoutingModule.html":{"url":"modules/PostsRoutingModule.html","title":"module - PostsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/posts/posts-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostsComponent } from './posts.component';\n\nconst routes: Routes = [\n  { path: '', component: PostsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PostsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/posts.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/posts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetPost(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/posts.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Posts } from '../models/posts.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private _http: HttpClient) { }\n\n  getPost(postId: number) {\n    return this._http.get(`${environment.feeds}/${postId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nApiErrorComponent\n\nApiErrorComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nApiErrorComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nApiErrorComponent \n\nApiErrorComponent \n\nApiErrorComponent  -->\n\nSharedModule->ApiErrorComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiErrorComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiErrorComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { ApiErrorComponent } from './api-error/api-error.component';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    SpinnerComponent,\n    ApiErrorComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    HeaderComponent,\n    SpinnerComponent,\n    ApiErrorComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isDataLoaded\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/spinner/spinner.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isDataLoaded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/spinner/spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/spinner/spinner.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  @Input() isDataLoaded: boolean = false;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./spinner.component.scss\n                \n                .wrapper {\n  height: 90vh;\n  display: grid;\n  place-content: center;\n\n  .spinner-grow {\n    margin: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Loading...  '\n    var COMPONENTS = [{'name': 'ApiErrorComponent', 'selector': 'app-api-error'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'PostsComponent', 'selector': 'app-posts'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api/feed.service.ts\n            \n            injectable\n            FeedService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/api/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/material/material.module.ts\n            \n            variable\n            MaterialComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/comments.models.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/feed.models.ts\n            \n            interface\n            Feed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/posts.models.ts\n            \n            interface\n            Posts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/posts/posts.component.ts\n            \n            component\n            PostsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/api-error/api-error.component.ts\n            \n            component\n            ApiErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.1.0\n        \n            @angular/cdk : ^12.1.0\n        \n            @angular/common : ~12.1.0\n        \n            @angular/compiler : ~12.1.0\n        \n            @angular/core : ~12.1.0\n        \n            @angular/forms : ~12.1.0\n        \n            @angular/material : ^12.1.0\n        \n            @angular/platform-browser : ~12.1.0\n        \n            @angular/platform-browser-dynamic : ~12.1.0\n        \n            @angular/router : ~12.1.0\n        \n            angular-crumbs : ^3.0.1\n        \n            ngx-quicklink : ^0.2.7\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nUi\nThis project was generated with Angular CLI version 12.1.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nSharedModule->FeedModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nSharedModule->PostsModule\n\n\n\n\n\nApiErrorComponent \n\nApiErrorComponent \n\nApiErrorComponent  -->\n\nSharedModule->ApiErrorComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nAppModule -->\n\nHttpErrorInterceptor->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFeedModule -->\n\nMaterialModule->FeedModule\n\n\n\nPostsModule -->\n\nMaterialModule->PostsModule\n\n\n\n\n\nPostsComponent\n\nPostsComponent\n\nPostsModule -->\n\nPostsComponent->PostsModule\n\n\n\n\n\nPostsRoutingModule\n\nPostsRoutingModule\n\nPostsModule -->\n\nPostsRoutingModule->PostsModule\n\n\n\n\n\nApiErrorComponent\n\nApiErrorComponent\n\nSharedModule -->\n\nApiErrorComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MaterialComponents   (src/.../material.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  feeds: 'https://jsonplaceholder.typicode.com/posts',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  feeds: 'https://jsonplaceholder.typicode.com/posts',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/material/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ScrollingModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatIconModule\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
